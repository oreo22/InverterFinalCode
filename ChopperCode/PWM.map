ARM Linker, 5.03 [Build 76] [MDK-ARM Lite]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to startup.o(STACK) for StackMem
    startup.o(RESET) refers to main.o(i.SysTick_Handler) for SysTick_Handler
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for HeapMem
    startup.o(.text) refers to startup.o(STACK) for StackMem
    pwmtest.o(i.main2) refers to pll.o(i.PLL_Init) for PLL_Init
    pwmtest.o(i.main2) refers to pwm.o(i.PWM0A_Init) for PWM0A_Init
    pwmtest.o(i.main2) refers to pwm.o(i.PWM0B_Init) for PWM0B_Init
    pwmtest.o(i.main2) refers to startup.o(.text) for WaitForInterrupt
    main.o(i.SysTick_Handler) refers to main.o(.data) for count
    main.o(i.Timer_15s_Init) refers to main.o(.data) for count
    main.o(i.main) refers to pll.o(i.PLL_Init) for PLL_Init
    main.o(i.main) refers to pwm.o(i.PWM0A_Init) for PWM0A_Init
    main.o(i.main) refers to pwm.o(i.PWM0B_Init) for PWM0B_Init
    main.o(i.main) refers to pwm.o(i.PWM0A2_Init) for PWM0A2_Init
    main.o(i.main) refers to pwm.o(i.PWM0B2_Init) for PWM0B2_Init
    main.o(i.main) refers to main.o(i.Timer_15s_Init) for Timer_15s_Init
    main.o(i.main) refers to main.o(i.heartbeat) for heartbeat
    main.o(i.main) refers to startup.o(.text) for EnableInterrupts
    main.o(i.main) refers to pwm.o(i.PWM0A_Duty) for PWM0A_Duty
    main.o(i.main) refers to pwm.o(i.PWM0B_Duty) for PWM0B_Duty
    main.o(i.main) refers to uartstdio.o(i.UARTprintf) for UARTprintf
    main.o(i.main) refers to main.o(.data) for summer_duty
    uartstdio.o(i.UARTStdioConfig) refers to uartstdio.o(.constdata) for g_ui32UARTPeriph
    uartstdio.o(i.UARTStdioConfig) refers to uartstdio.o(.data) for g_ui32Base
    uartstdio.o(i.UARTgetc) refers to uartstdio.o(.data) for g_ui32Base
    uartstdio.o(i.UARTgets) refers to uartstdio.o(i.UARTwrite) for UARTwrite
    uartstdio.o(i.UARTgets) refers to uartstdio.o(.data) for g_ui32Base
    uartstdio.o(i.UARTprintf) refers to uartstdio.o(i.UARTvprintf) for UARTvprintf
    uartstdio.o(i.UARTvprintf) refers to uartstdio.o(i.UARTwrite) for UARTwrite
    uartstdio.o(i.UARTvprintf) refers to uartstdio.o(.constdata) for g_pcHex
    uartstdio.o(i.UARTwrite) refers to uartstdio.o(.data) for g_ui32Base
    uartstdio.o(.constdata) refers to uartstdio.o(.conststring) for .conststring
    __main.o(!!!main) refers to rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    rtentry2.o(.ARM.exidx) refers to rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    rtentry4.o(.ARM.exidx) refers to rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002A) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000008) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000F) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000031) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$0000000E) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000D) for .ARM.Collect$$libinit$$0000000D
    libinit2.o(.ARM.Collect$$libinit$$00000024) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000025) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000006) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000009) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing pwm.o(i.PWM0A2_Duty), (12 bytes).
    Removing pwm.o(i.PWM0A3_Duty), (12 bytes).
    Removing pwm.o(i.PWM0A3_Init), (280 bytes).
    Removing pwm.o(i.PWM0B2_Duty), (12 bytes).
    Removing pwm.o(i.PWM0B3_Duty), (12 bytes).
    Removing pwm.o(i.PWM0B3_Init), (216 bytes).
    Removing pwmtest.o(i.main2), (36 bytes).
    Removing main.o(i.DelayWait10ms), (32 bytes).
    Removing uartstdio.o(i.UARTStdioConfig), (80 bytes).
    Removing uartstdio.o(i.UARTgetc), (20 bytes).
    Removing uartstdio.o(i.UARTgets), (144 bytes).

11 unused section(s) (total 856 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x00000000

  Load Region LR_1 (Base: 0x00000000, Size: 0x00000d0c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Base: 0x00000000, Size: 0x00000be0, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000284   Code   RO            3  * RESET               startup.o
    0x00000284   0x00000008   Code   RO          252  * !!!main             c_w.l(__main.o)
    0x0000028c   0x00000002   Code   RO          279    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0000028e   0x00000000   Code   RO          286    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          289    .ARM.Collect$$libinit$$00000008  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          291    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          293    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          296    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          298    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          300    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          302    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          304    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          306    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          308    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          310    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          312    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          314    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          316    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          320    .ARM.Collect$$libinit$$0000002A  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          322    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          324    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0000028e   0x00000000   Code   RO          326    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0000028e   0x00000002   Code   RO          327    .ARM.Collect$$libinit$$00000031  c_w.l(libinit2.o)
    0x00000290   0x00000002   Code   RO          347    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x00000292   0x00000000   Code   RO          361    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          364    .ARM.Collect$$libshutdown$$00000006  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          367    .ARM.Collect$$libshutdown$$00000009  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          369    .ARM.Collect$$libshutdown$$0000000B  c_w.l(libshutdown2.o)
    0x00000292   0x00000000   Code   RO          372    .ARM.Collect$$libshutdown$$0000000E  c_w.l(libshutdown2.o)
    0x00000292   0x00000002   Code   RO          373    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x00000294   0x00000000   Code   RO          254    .ARM.Collect$$rtentry$$00000000  c_w.l(rtentry.o)
    0x00000294   0x00000000   Code   RO          256    .ARM.Collect$$rtentry$$00000002  c_w.l(rtentry2.o)
    0x00000294   0x00000006   Code   RO          268    .ARM.Collect$$rtentry$$00000004  c_w.l(rtentry4.o)
    0x0000029a   0x00000000   Code   RO          258    .ARM.Collect$$rtentry$$00000009  c_w.l(rtentry2.o)
    0x0000029a   0x00000004   Code   RO          259    .ARM.Collect$$rtentry$$0000000A  c_w.l(rtentry2.o)
    0x0000029e   0x00000000   Code   RO          261    .ARM.Collect$$rtentry$$0000000C  c_w.l(rtentry2.o)
    0x0000029e   0x00000008   Code   RO          262    .ARM.Collect$$rtentry$$0000000D  c_w.l(rtentry2.o)
    0x000002a6   0x00000002   Code   RO          283    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x000002a8   0x00000000   Code   RO          329    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x000002a8   0x00000004   Code   RO          330    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x000002ac   0x00000006   Code   RO          331    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x000002b2   0x00000002   PAD
    0x000002b4   0x00000030   Code   RO            4    .text               startup.o
    0x000002e4   0x00000006   Code   RO          250    .text               c_w.l(heapauxi.o)
    0x000002ea   0x0000004a   Code   RO          270    .text               c_w.l(sys_stackheap_outer.o)
    0x00000334   0x0000000c   Code   RO          272    .text               c_w.l(exit.o)
    0x00000340   0x00000008   Code   RO          280    .text               c_w.l(libspace.o)
    0x00000348   0x0000000c   Code   RO          339    .text               c_w.l(sys_exit.o)
    0x00000354   0x00000002   Code   RO          350    .text               c_w.l(use_no_semi.o)
    0x00000356   0x00000000   Code   RO          352    .text               c_w.l(indicate_semi.o)
    0x00000356   0x00000002   PAD
    0x00000358   0x0000007c   Code   RO           12    i.PLL_Init          pll.o
    0x000003d4   0x00000118   Code   RO           35    i.PWM0A2_Init       pwm.o
    0x000004ec   0x0000000c   Code   RO           38    i.PWM0A_Duty        pwm.o
    0x000004f8   0x000000ec   Code   RO           39    i.PWM0A_Init        pwm.o
    0x000005e4   0x000000d8   Code   RO           41    i.PWM0B2_Init       pwm.o
    0x000006bc   0x0000000c   Code   RO           44    i.PWM0B_Duty        pwm.o
    0x000006c8   0x000000bc   Code   RO           45    i.PWM0B_Init        pwm.o
    0x00000784   0x0000003c   Code   RO          125    i.SysTick_Handler   main.o
    0x000007c0   0x00000044   Code   RO          126    i.Timer_15s_Init    main.o
    0x00000804   0x0000001a   Code   RO          166    i.UARTprintf        uartstdio.o
    0x0000081e   0x00000002   PAD
    0x00000820   0x00000250   Code   RO          167    i.UARTvprintf       uartstdio.o
    0x00000a70   0x00000034   Code   RO          168    i.UARTwrite         uartstdio.o
    0x00000aa4   0x00000058   Code   RO          127    i.heartbeat         main.o
    0x00000afc   0x000000b4   Code   RO          128    i.main              main.o
    0x00000bb0   0x0000001c   Data   RO          169    .constdata          uartstdio.o
    0x00000bcc   0x00000011   Data   RO          170    .conststring        uartstdio.o
    0x00000bdd   0x00000003   PAD
    0x00000be0   0x00000000   Data   RO          404    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x0000012c, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000124   Data   RW          129    .data               main.o
    0x20000124   0x00000005   Data   RW          171    .data               uartstdio.o


    Execution Region ER_ZI (Base: 0x2000012c, Size: 0x00000464, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2000012c   0x00000060   Zero   RW          281    .bss                c_w.l(libspace.o)
    0x2000018c   0x00000004   PAD
    0x20000190   0x00000000   Zero   RW            2    HEAP                startup.o
    0x20000190   0x00000400   Zero   RW            1    STACK               startup.o

