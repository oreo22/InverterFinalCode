<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Project:</h2>
C:\Users\Oriana\Desktop\InverterFinalCode\InverterControlLoop\freertos_demo.uvproj
Project File Date:  07/04/2018

<h2>Output:</h2>
Build target 'freertos_demo'
compiling PLL.c...
PLL.c(205): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0] > (QPI2) && spll_obj->theta[0]< (PI)){ //Q2
PLL.c(205): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0] > (QPI2) && spll_obj->theta[0]< (PI)){ //Q2
PLL.c(206): warning:  #1035-D: single-precision operand implicitly converted to double-precision
         sinTheta=PI-spll_obj->theta[0];
PLL.c(209): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> PI && spll_obj->theta[0]< (Q3PI2)){ //Q3
PLL.c(209): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> PI && spll_obj->theta[0]< (Q3PI2)){ //Q3
PLL.c(210): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=spll_obj->theta[0]-PI;
PLL.c(213): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> (Q3PI2) && spll_obj->theta[0] < (Q2PI)){ //Q4
PLL.c(213): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> (Q3PI2) && spll_obj->theta[0] < (Q2PI)){ //Q4
PLL.c(214): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=(Q2PI)-spll_obj->theta[0];
PLL.c(227): warning:  #177-D: variable "fun" was declared but never referenced
                        bool fun=false;
PLL.c(237): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      float cosIndex=spll_obj->theta[0]+(QPI2); //changing the theta for cos
PLL.c(238): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex>(Q2PI)){ //Q1
PLL.c(239): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=cosIndex-(Q2PI);
PLL.c(241): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (QPI2) && cosIndex< (PI)) {//Q2
PLL.c(241): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (QPI2) && cosIndex< (PI)) {//Q2
PLL.c(242): warning:  #1035-D: single-precision operand implicitly converted to double-precision
         cosIndex=PI-cosIndex;
PLL.c(244): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> PI && cosIndex< (Q3PI2)){//Q3
PLL.c(244): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> PI && cosIndex< (Q3PI2)){//Q3
PLL.c(245): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=cosIndex-PI;
PLL.c(248): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (Q3PI2) && cosIndex < (Q2PI)){ //Q4
PLL.c(248): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (Q3PI2) && cosIndex < (Q2PI)){ //Q4
PLL.c(249): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=(Q2PI)-cosIndex;
PLL.c(259): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta>(Q2PI)){ //Q1
PLL.c(260): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=sinTheta-(Q2PI);
PLL.c(262): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (QPI2) && sinTheta< (PI)){
PLL.c(262): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (QPI2) && sinTheta< (PI)){
PLL.c(263): warning:  #1035-D: single-precision operand implicitly converted to double-precision
         sinTheta=PI-sinTheta;
PLL.c(266): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> PI && sinTheta< (Q3PI2)){ //Q3
PLL.c(266): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> PI && sinTheta< (Q3PI2)){ //Q3
PLL.c(267): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=sinTheta-PI;
PLL.c(270): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (Q3PI2) && sinTheta < (Q2PI)){ //Q4
PLL.c(270): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (Q3PI2) && sinTheta < (Q2PI)){ //Q4
PLL.c(271): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=(Q2PI)-sinTheta;
PLL.c(301): warning:  #177-D: variable "fun" was declared but never referenced
                bool fun=false;
PLL.c(317): warning:  #1-D: last line of file ends without a newline
  }
PLL.c: 35 warnings, 0 errors
linking...
Program Size: Code=12920 RO-data=5592 RW-data=1644 ZI-data=9076  
After Build - User command #1: fromelf --bin --output .\rvmdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 35 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
s declared but never referenced
  static void PWMTask(void *pvParameters)
pwm_task.c: 1 warning, 0 errors
compiling gpio_task.c...
compiling Control.c...
Control.c(164): warning:  #1-D: last line of file ends without a newline
  }
Control.c: 1 warning, 0 errors
linking...
Program Size: Code=13152 RO-data=5752 RW-data=1644 ZI-data=9076  
After Build - User command #1: fromelf --bin --output .\rvmdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 39 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
mdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 41 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
vmdk\freertos_demo.axf: Error: L6200E: Symbol dcValue multiply defined (by gpio_task.o and adc_task.o).
.\rvmdk\freertos_demo.axf: Error: L6200E: Symbol sqrt multiply defined (by sqrt.o and adc_task.o).
Not enough information to list image symbols.
Not enough information to list the image map.
Finished: 2 information, 0 warning and 6 error messages.
".\rvmdk\freertos_demo.axf" - 6 Error(s), 41 Warning(s).
Target not created
                                      status ^=GPIO_PIN_3;
Control.c(54): warning:  #223-D: function "GPIOPinWrite" declared implicitly
                        GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_3, status);
Control.c(57): error:  #169: expected a declaration
        if(ctrlFlag){
Control.c(78): warning:  #12-D: parsing restarts here after previous syntax error
                degreeDesired=powerFlag*degreeDesired;
Control.c(80): error:  #79: expected a type specifier
                UARTprintf("powerAngle: %d \n",(int)degreeDesired);
Control.c(80): error:  #79: expected a type specifier
                UARTprintf("powerAngle: %d \n",(int)degreeDesired);
Control.c(80): error:  #260-D: explicit type is missing ("int" assumed)
                UARTprintf("powerAngle: %d \n",(int)degreeDesired);
Control.c(80): error:  #147: declaration is incompatible with "void UARTprintf(const char *, ...)" (declared at line 65 of "..\utils/uartstdio.h")
                UARTprintf("powerAngle: %d \n",(int)degreeDesired);
Control.c(81): error:  #77-D: this declaration has no storage class or type specifier
                ctrlFlag=0;
Control.c(81): error:  #147: declaration is incompatible with "uint8_t ctrlFlag" (declared at line 80 of "adc_task.h")
                ctrlFlag=0;
Control.c(82): error:  #169: expected a declaration
        }
Control.c(29): warning:  #177-D: variable "sum_squares" was declared but never referenced
  static int sum_squares=0; //accumulator of the instant samples 
Control.c: 3 warnings, 16 errors
".\rvmdk\freertos_demo.axf" - 17 Error(s), 44 Warning(s).
Target not created
