<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Project:</h2>
C:\Users\Oriana\Desktop\InverterFinalCode\InverterControlLoop\freertos_demo.uvproj
Project File Date:  07/18/2018

<h2>Output:</h2>
Build target 'freertos_demo'
compiling Control.c...
Control.c(104): warning:  #177-D: variable "Srated" was declared but never referenced
        double Srated=113.8614;
Control.c(105): warning:  #177-D: variable "Qmax" was declared but never referenced
        double Qmax=0;
Control.c(165): warning:  #1-D: last line of file ends without a newline
  }
Control.c: 3 warnings, 0 errors
linking...
Program Size: Code=13680 RO-data=5592 RW-data=1644 ZI-data=5796  
After Build - User command #1: fromelf --bin --output .\rvmdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 3 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
mmand #1: fromelf --bin --output .\rvmdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 5 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> PI && spll_obj->theta[0]< (Q3PI2)){ //Q3
PLL.c(209): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=spll_obj->theta[0]-PI;
PLL.c(212): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> (Q3PI2) && spll_obj->theta[0] < (Q2PI)){ //Q4
PLL.c(212): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(spll_obj->theta[0]> (Q3PI2) && spll_obj->theta[0] < (Q2PI)){ //Q4
PLL.c(213): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=(Q2PI)-spll_obj->theta[0];
PLL.c(230): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      float cosIndex=spll_obj->theta[0]+(QPI2); //changing the theta for cos
PLL.c(231): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex>(Q2PI)){ //Q1
PLL.c(232): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=cosIndex-(Q2PI);
PLL.c(234): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (QPI2) && cosIndex< (PI)) {//Q2
PLL.c(234): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (QPI2) && cosIndex< (PI)) {//Q2
PLL.c(235): warning:  #1035-D: single-precision operand implicitly converted to double-precision
         cosIndex=PI-cosIndex;
PLL.c(237): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> PI && cosIndex< (Q3PI2)){//Q3
PLL.c(237): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> PI && cosIndex< (Q3PI2)){//Q3
PLL.c(238): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=cosIndex-PI;
PLL.c(241): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (Q3PI2) && cosIndex < (Q2PI)){ //Q4
PLL.c(241): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(cosIndex> (Q3PI2) && cosIndex < (Q2PI)){ //Q4
PLL.c(242): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          cosIndex=(Q2PI)-cosIndex;
PLL.c(252): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta>(Q2PI)){ //Q1
PLL.c(253): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=sinTheta-(Q2PI);
PLL.c(255): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (QPI2) && sinTheta< (PI)){
PLL.c(255): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (QPI2) && sinTheta< (PI)){
PLL.c(256): warning:  #1035-D: single-precision operand implicitly converted to double-precision
         sinTheta=PI-sinTheta;
PLL.c(259): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> PI && sinTheta< (Q3PI2)){ //Q3
PLL.c(259): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> PI && sinTheta< (Q3PI2)){ //Q3
PLL.c(260): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=sinTheta-PI;
PLL.c(263): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (Q3PI2) && sinTheta < (Q2PI)){ //Q4
PLL.c(263): warning:  #1035-D: single-precision operand implicitly converted to double-precision
      if(sinTheta> (Q3PI2) && sinTheta < (Q2PI)){ //Q4
PLL.c(264): warning:  #1035-D: single-precision operand implicitly converted to double-precision
          sinTheta=(Q2PI)-sinTheta;
PLL.c(295): warning:  #177-D: variable "fun" was declared but never referenced
                bool fun=false;
PLL.c(311): warning:  #1-D: last line of file ends without a newline
  }
PLL.c: 34 warnings, 0 errors
compiling pwm_task.c...
pwm_task.c(98): warning:  #177-D: function "PWMTask" was declared but never referenced
  static void PWMTask(void *pvParameters)
pwm_task.c: 1 warning, 0 errors
compiling gpio_task.c...
compiling Control.c...
Control.c(104): warning:  #177-D: variable "Srated" was declared but never referenced
        double Srated=113.8614;
Control.c(105): warning:  #177-D: variable "Qmax" was declared but never referenced
        double Qmax=0;
Control.c(165): warning:  #1-D: last line of file ends without a newline
  }
Control.c: 3 warnings, 0 errors
linking...
Program Size: Code=13792 RO-data=5592 RW-data=1644 ZI-data=5796  
After Build - User command #1: fromelf --bin --output .\rvmdk\freertos_demo.bin .\rvmdk\freertos_demo.axf
".\rvmdk\freertos_demo.axf" - 0 Error(s), 40 Warning(s).
Load "C:\\Users\\Oriana\\Desktop\\InverterFinalCode\\InverterControlLoop\\rvmdk\\freertos_demo.axf" 
Connecting: Mode=JTAG, Speed=1000000Hz
Erase Done.
Programming Done.
Verify OK.
